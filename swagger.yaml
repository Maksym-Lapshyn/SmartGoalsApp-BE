swagger: '2.0'
info:
    description: 'This is a sample `Swagger Documentation`'
    version: 1.0.0
    title: 'Smart Goals App Documentation'
    termsOfService: 'http://swagger.io/terms/'
    contact:
        email: maksym@gmail.com
    license:
        name: 'Apache 2.0'
        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:3000'
basePath: /api
tags:
    -
        name: goal
        description: 'Everything about your Goals'
        externalDocs:
            description: 'Find out more'
            url: 'http://swagger.io'
schemes:
    - http
    - https
paths:
    /goals:
        post:
            tags: [goal]
            summary: 'Create a goal'
            description: ""
            operationId: addgoal
            consumes: [application/json]
            produces: [application/json]
            parameters: [{in: body, name: body, description: 'Goal object that needs to be created', required: true, schema: {$ref: '#/definitions/GoalWrite'}}]
            responses: {'201': {description: 'Goal created', schema: {$ref: '#/definitions/Goal'}}, '400': {description: 'Invalid input'}}
        get:
            tags: [goal]
            summary: 'Get all goals'
            description: ""
            operationId: getallgoals
            consumes: [application/json]
            produces: [application/json]
            responses: {'200': {description: 'Successful operation', schema: {$ref: '#/definitions/Goals'}}}
    '/goals/{id}':
        get:
            tags: [goal]
            summary: 'Find a goal by id'
            description: 'Returns a single goal'
            operationId: getgoalbyid
            produces: [application/json]
            parameters: [{name: id, in: path, description: 'Id of pet to return', required: true, type: string, format: string}]
            responses: {'200': {description: 'Successful operation', schema: {$ref: '#/definitions/Goal'}}, '404': {description: 'Goal not found'}}
        put:
            tags: [goal]
            summary: 'Update a goal'
            description: ""
            operationId: updategoal
            consumes: [application/json]
            produces: [application/json]
            parameters: [{name: id, in: path, description: 'Id of goal that needs to be updated', required: true, type: string, format: string}, {in: body, name: body, description: 'Goal object that needs to be updated', required: true, schema: {$ref: '#/definitions/GoalWrite'}}]
            responses: {'204': {description: 'Goal updated'}, '400': {description: 'Invalid input'}}
        delete:
            tags: [goal]
            summary: 'Delete a goal'
            description: ""
            operationId: deletegoal
            produces: [application/json]
            parameters: [{name: id, in: path, description: 'Goal id to delete', required: true, type: string, format: string}]
            responses: {'204': {description: 'Goal deleted'}}
definitions:
    Goal:
        type: object
        properties:
            _id: {type: string, format: string}
            name: {type: string, format: string}
            description: {type: string, format: string}
        xml:
            name: Goal
    GoalWrite:
        type: object
        properties:
            name: {type: string, format: string}
            description: {type: string, format: string}
        xml:
            name: Goal
    Goals:
        type: array
        items:
            $ref: '#/definitions/Goal'
externalDocs:
    description: 'Find out more about Swagger'
    url: 'http://swagger.io'
